<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE chapter
[<!ENTITY % isogrk1 PUBLIC "ISO 8879:1986//ENTITIES Greek Letters//EN//XML"
                    "http://www.oasis-open.org/docbook/xmlcharent/0.3/iso-grk1.ent">
 <!ENTITY % isopub PUBLIC "ISO 8879:1986//ENTITIES Publishing//EN//XML"
                    "http://www.oasis-open.org/docbook/xmlcharent/0.3/iso-pub.ent">
%isogrk1;
%isopub;
]>

<chapter id="engine_options" xmlns='http://docbook.org/ns/docbook' xml:lang="en" xmlns:et="http://super-resolution.de/elemtable">
   <title>rapidSTORM engine options</title>
<glossary>
   <title/>
<et:elem desc="Minimum spot distance" topic="FitPositionEpsilon">
    <para>The minimum distance between local maxima of the smoothed image
        that will be used as fit start locations. If a weak maximum occurs
        within this distance of a strong maximum inside the smoothed image,
        the weak maximum is ignored and no fitting is attempted at the
        weak maximum.</para>
    <para>High values will ensure a higher noise tolerance at the cost
        of some missed localizations.</para>
</et:elem>
<et:elem desc="Fit planes separately" topic="SeparatePlaneFitting">
    <para>If this option is set, all planes are fit independently of each
        other. Spot finding and spot fitting will happen in each plane,
        and the results will be put into one large localization vector.
        The fluorophore field in the output indicates in which plane a
        localization was found.</para>
    <para>Set the number of fluorophores to 1 if you do separate fitting.</para>
</et:elem>
<et:elem desc="Fit judging method" topic="FitJudgingMethod">
    <para>The fit judging method controls the decision whether a set of
        fitted PSF parameters is a localization or just background noise.</para>
    <glossseealso otherterm="FixedThreshold"/>
</et:elem>

<et:elem desc="Spot fitting method" topic="SpotFittingMethod">
    <para>The spot fitting method is the method for converting suspected
        fluorophore positions (spots) into localizations. There is currently
        only one useful choice, <et:elemref linkend="GUF"/>.</para>
</et:elem>

<et:elem desc="Spot finding method" topic="SpotFindingMethod">
    <indexterm><primary>smoothing</primary></indexterm>
    <para>Select a smoothing method to be employed before selecting
    local maximums as spot candidates. The standard method here is
    smoothing with an average mask (Spalttiefpass), which gives
    good performance for most images. Median smoothing provides
    slower, but sometimes more accurate and less blurring 
    smoothing. Erosion (also known as local minimum filter)
    is faster than the median filter and gives similar results
    for small (standard deviation close to 1) spots, while 
    the fillhole transformation followed by erosion is better for
    large spots. For a complete discussion and quantitative
    comparison, see <xref linkend="WolterDiplomarbeit"/>
    and <xref linkend="Wolter2010"/>.</para>
</et:elem>
<et:elem desc="Maximum lateral movement" topic="MaximumDistanceFromSpot">
    <para>The maximum distance between the start X/Y position and the final
        X/Y position for the fit over the entire fit process. If the positions
        differ more than this amount, the localization is discarded.</para>
</et:elem>
<et:elem desc="Spot search eagerness" topic="Motivation">
    <para>The rapidSTORM engine uses dynamical thresholding, i.e.
        fits the spots with at the most intense positions in the
        smoothed image first and continues in order of decreasing intensity.
        Fitting is aborted when a number of spots equal to the motivation
        is rejected by the <et:elemref linkend="FitJudgingMethod"/>.
        This parameter controls the motivation.</para>
    <para>Higher values in this field will cause more localizations to be found,
        albeit at the cost of more false positives.</para>
</et:elem>
<et:elem desc="PSF width is free fit parameter" topic="FreeSigmaFitting">
    <para>Treat the PSF width as variables in the fit process rather
        than as constants. The estimated or fixed standard deviation
        parameters act as initial values for the estimation when the
        free covariancce matrix is selected.</para>
    <para>This checkbox will drastically reduce the localization precision
        and increase noise localizations, but is useful when the PSF width
        is variable between spots (e.g. in 3D estimation). If it is merely
        unknown, you should prefer using the <guilabel>Estimate PSF form</guilabel>
        output.</para>
    <para>See also: <xref linkend="psf_model"/></para>
</et:elem>
<et:elem desc="Two-kernel distance threshold" topic="ThetaDist">
    <para>When performing two-kernel analysis (see <xref linkend="two_kernel_analysis"/>),
        any double-kernel fit with the two kernels further apart than this
        number is immediately discarded, resulting in a two-kernel
        improvement of 0.</para>
    <para>This parameter ensures that large fitting windows and two-kernel
        analysis can cooperate.</para>
    <glossseealso otherterm="TwoKernelFitting"/>
</et:elem>

<et:elem desc="Lateral epsilon" topic="NegligibleStepLength">
    <para>The nonlinear fit process for a localization attempt is continued
        while the lateral mean position (x,y) changes absolutely by more than 
        this parameter.</para>
    <glossseealso otherterm="MaximumIterationSteps"/>
    <glossseealso otherterm="RelativeFitEpsilon"/>
</et:elem>

<et:elem desc="Relative epsilon" topic="RelativeFitEpsilon">
    <para>The nonlinear fit process for a localization attempt is continued
        while any parameter (except the lateral means x and y) changes 
        relatively by more than this parameter.</para>
    <glossseealso otherterm="MaximumIterationSteps"/>
    <glossseealso otherterm="NegligibleStepLength"/>
</et:elem>

<et:elem desc="Initial lambda factor" topic="MarquardtStartLambda">
    <para>The usual lambda factor of Levenberg-Marquardt fitting controls
        the size of the trust region for Gauss-Newton steps. Refer to
        a good textbook for its meaning, e.g. <xref linkend="Recipes"/>.</para>
</et:elem>

<et:elem desc="Fit iteration limit" topic="MaximumIterationSteps">
    <para>The nonlinear fit process for a localization attempt is stopped
        after this number of iterations.</para>
    <glossseealso otherterm="RelativeFitEpsilon"/>
    <glossseealso otherterm="NegligibleStepLength"/>
</et:elem>

<et:elem desc="Store PSF width" topic="OutputSigmas">
    <para>Set the psffwhmx and psffwhmy fields of localizations to the
        widths used in computation. If this field is checked, the localization
        output files will contain PSF width information, and all outputs working
        with localization widths depend on this checkbox.</para>
</et:elem>
<et:elem desc="Laempi fit for positions" topic="LaempiPosition">
    <para>Fit the lateral emitter position (x,y) in each plane independently.
        This option can mitigate small errors in alignment at the cost of reduced
        precision.</para>
</et:elem>
<et:elem desc="Disjoint amplitude fit" topic="LaempiAmplitudes">
    <para>Fit the emission intensity in each plane independently.
        This option can be useful if the number and nature of fluorophore 
        populations in the sample is unknown. However, it will break multi-colour
        inference, and all <et:elemref linkend="TransmissionCoefficient"/> fields
        should be set to 1.</para>
</et:elem>
<et:elem desc="Compute two kernel improvement" topic="TwoKernelFitting">
    <para>Perform the <xref linkend="two_kernel_analysis"/> computation, which
        sets the two kernel improvement field.</para>
</et:elem>
<et:elem desc="Improve fit with ML estimate" topic="MLEFitting">
    <para>After successfully fitting a spot with a least squares error model,
        improve the fitted position using a maximum likelihood error model.
        This improves precision, especially for low photon counts, in exchange
        for a considerable increase in computation time. The
        <et:elemref linkend="CountsPerPhoton"/> and <et:elemref linkend="DarkCurrent"/> fields
        must be set if this option is used.</para>
</et:elem>
<et:elem desc="Fixed global threshold" topic="FixedThreshold">
    <para>This fit judging method judges parameter sets by their intensity.
        If the intensity surpasses the threshold, the parameter set is counted
        as a localization, and discarded otherwise.</para>
    <glossseealso otherterm="AmplitudeThreshold"/>
</et:elem>
<et:elem desc="Intensity threshold" topic="AmplitudeThreshold">
    <para>Minimum fitted emission intensity
    necessary for a spot to be considered a localization.
    If the fitted position has an intensity lower than this value,
    it is discarded as an artifact.</para>
    <glossseealso otherterm="FixedThreshold"/>
</et:elem>
<et:elem desc="Local relative threshold" topic="SquareRootRatio">
    <para>This fit judging method judges parameter sets by their intensity
        and the local background. Both values are the estimations from fitting
        the PSF model to the data.
        If the ratio of intensity to square root of local background surpasses
        a threshold, the parameter set is counted as a localization, and discarded otherwise.
        The square root of the background is used because it estimates the standard deviation
        of a Poisson-distributed background. The <et:elemref linkend="DarkCurrent"/> and
        the <et:elemref linkend="CountsPerPhoton"/> should be set to use this option.</para>
    <glossseealso otherterm="SNR"/>
</et:elem>
<et:elem desc="Signal-to-noise ratio" topic="SNR">
    <para>Minimum ratio of emission intensity to square root of background signal intensity
        necessary for a spot to be considered a localization.</para>
    <glossseealso otherterm="SquareRootRatio"/>
</et:elem>

<et:elem desc="Fit window radius" topic="FitWindowSize">
    <para>All pixels within this radius of a spot are used for fitting.
        The selected pixels form the data points for the nonlinear fitting
        routine, and the PSF is fitted to their intensities.</para>
    <para>A larger value here allows more precise fitting at the cost of
        slower computation.</para>
</et:elem>

<et:elem desc="Allow disjoint fitting" topic="DisjointFitting">
    <para>Employ the computational optimization of separating the
        X and Y dimensions of the Gaussian for computing the function's
        derivatives. This optimization is only performed if
        the alignment is set to <et:elemref linkend="ScaledProjection"/>,
        but can drastically improve computation time for large
        fit windows.</para>
</et:elem>

<et:elem desc="Use 64 bit floats" topic="DoublePrecision">
    <para>Compute values and derivatives of the PSF with 64 bit wide
        floating point numbers instead of 32 bit. Ensures higher reliability
        and precision, but with a small speed cost.</para>
</et:elem>

<et:elem desc="Smoothing mask width" topic="SmoothingMaskSize">
    <para>The full width of a square structuring element used for <et:elemref linkend="Median"/>
        and <et:elemref linkend="Average"/> smoothing.</para>
</et:elem>

<et:elem desc="Smoothing kernel std.dev." topic="SmoothingSigma">
    <para>The standard deviation (&sgr;) of a Gaussian smoothing kernel.</para>
</et:elem>
<et:elem desc="Erosion mask size" topic="SpotReconstructionMaskSize">
    <para>The full width of a square erosion mask.</para>
</et:elem>
<et:elem desc="Background mask width" topic="BackgroundMaskSize">
    <para>The full width of a square structuring element for the background averaging.</para>
</et:elem>
<et:elem desc="Foreground mask width" topic="ForegroundMaskSize">
    <para>The full width of a square structuring element for the foreground averaging.</para>
</et:elem>

<et:elem desc="Levenberg-Marquardt fitter" topic="GUF">
    <para>Currently, Levenberg-Marquardt fitting is the only implementation of a spot fitter,
        i.e. a routine that localizes a fluorescence emission to subpixel precision.
        The LM fitter works by building a PSF model (in most cases a Gaussian function),
        estimating crude initial guesses for a the parameter of this model, and then
        optimizing the distance between the data in the immediate surroundings of the spot
        and the theoretical model. The parameters of the model then give the location of the
        emitter and its intensity.</para>
</et:elem>

<et:elem desc="Smooth with gaussian kernel" topic="Gaussian">
    <para>Smooth the input images with a Gaussian kernel of the specified width. This kernel
        can be set to the PSF size or specified independently. Gaussian smoothing is often
        suboptimal, see <xref linkend="WolterDiplomarbeit"/> for details.</para>
</et:elem>

<et:elem topic="Reconstruction" desc="Morphologically reconstruct image">
    <para>Smooth the input by performing a morphological fillhole transformation (using reconstruction by dilation)
        followed by a rectangular erosion.</para>
</et:elem>

<et:elem topic="Median" desc="Smooth by median">
    <para>Smooth by applying a square median filter of the specified width.</para>
</et:elem>

<et:elem topic="Erosion" desc="Erode image">
    <para>Smooth by applying a morphological erosion with a square structuring element of the specified size.</para>
</et:elem>

<et:elem topic="DifferenceOfAverage" desc="Smooth by difference of averages">
    <para>Smooth by applying a square moving window average filter. Then substract the result of a wider square
        moving window average filter, which estimates the local background and can thereby deal with uneven
        backgrounds.</para>
</et:elem>

<et:elem topic="Average" desc="Smooth by average">
    <para>Smooth by applying a square moving window average filter.</para>
</et:elem>

</glossary>
</chapter>
