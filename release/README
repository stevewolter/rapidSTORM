$OLD_VERSION AND $NEW_VERSION reference full version numbers without Debian
suffix, e.g. 3.3.1.

=== Source release ===

* Update the changelog. Use the output of 
    $ git log --format=oneline ${OLD_VERSION}..${NEW_VERSION}
* $ make distcheck
* git tag ${NEW_VERSION}

=== Building the Debian source package ===

* Get the latest Debian package sources:
    $ apt-get source rapidstorm
* Get the source distribution file:
    $ cp ${BUILDDIR}/rapidstorm-${NEW_VERSION}.tar.gz .
* Use uupdate to re-package:
    $ cd rapidstorm-${OLD_VERSION}
    $ uupdate ../rapidstorm-${NEW_VERSION}.tar.gz
    $ cd ../rapidstorm-${NEW_VERSION}
    $ vi debian/changelog
    # Replace UNRELEASED by testing
    $ dpkg-buildpackage -S

=== Building the Debian binary packages ===

* Use pbuilder do build Debian and Ubuntu packages:
    $ DEBIAN_VERSION=${NEW_VERSION}-1 make -f release/Makefile

=== Uploading the Debian binary packages ===

* Upload the packages to the rapidSTORM repository:
    $ rsync --progress -a -v release/pbuilder/buildresult/* asterix.biozentrum.uni-wuerzburg.de:/projects/www/
* Regenerate the index:
    $ ssh -t asterix.biozentrum.uni-wuerzburg.de 'eval $(gpg-agent --daemon); bash /projects/www/debian/install-apt-archive.sh; bash /projects/www/ubuntu/install-apt-archive.sh'
* Clean up the built packages:
    $ rm -rf release/pbuilder/buildresult

=== Build the Windows installer ===

* Build the installer:
    $ bash ./windows-installer/create-rapidstorm-installer.sh 3 3 1:${NEW_VERSION)-1
* Publish the installer:
    $ scp rapidstorm-3.3-win32.exe asterix:/projects/www/software/rapidSTORM/binary-win32
    $ scp rapidstorm-3.3-win64.exe asterix:/projects/www/software/rapidSTORM/binary-win64
